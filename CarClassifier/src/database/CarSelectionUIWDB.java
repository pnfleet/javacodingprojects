//Patrick Fleet
// Comp 3715 TR 2:40-4:05
//Project part 2

package database;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;


public class CarSelectionUIWDB extends javax.swing.JFrame {
    private String fileName;
    
    private static final String JDBC_DRIVER="com.mysql.jdbc.Driver";
    private  static final String DB_URL="jdbc:mysql://localhost:3306/patrick_fleet";
    private static final String USER="root";
    private static final String PASS="pass";
    Connection conn=null;
    Statement stmt=null;
    JFrame makeModelWindow=null;
    /**
     * Creates new form CarSelectionUI
     */
    public CarSelectionUIWDB() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        
        SubmitButton = new javax.swing.JButton();
        ClearButton = new javax.swing.JButton();
        DisplayDataButton = new javax.swing.JButton();
        QueryButton=new JButton();
        makeModelButton=new JButton();
        
        age = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11=new JLabel();
        jLabel12=new JLabel();
        jLabel13=new JLabel();
        price = new javax.swing.JTextField();
        maintenenceCost = new javax.swing.JTextField();
        color = new javax.swing.JTextField();
        numDoors = new javax.swing.JTextField();
        numSeats = new javax.swing.JTextField();
        make=new JTextField("Make Name");
        model=new JTextField("Model Name");
        type = new javax.swing.JComboBox();
        nestedType=new JComboBox();
        trunkSize = new javax.swing.JComboBox();
        safety = new javax.swing.JComboBox();
        gender = new javax.swing.JComboBox();
        satisfaction=new JComboBox();
        make.setEditable(false);
        model.setEditable(false);
        type.setEditable(false);
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Car Data Interface");
        setBackground(new java.awt.Color(153, 255, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.MOVE_CURSOR));
        setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        setForeground(java.awt.Color.cyan);
        setResizable(false);
        setType(java.awt.Window.Type.UTILITY);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                formMouseEntered(evt);
            }
        });
        type.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "subCompact", "compact", "midSize", "fullSize" }));
                type.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    typeActionPerformed(evt);
                }
        });
        SubmitButton.setText("Submit");
        SubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitButtonActionPerformed(evt);
            }
        });

        ClearButton.setText("Clear");
        ClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearButtonActionPerformed(evt);
            }
        });

        DisplayDataButton.setText("View");
        DisplayDataButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplayDataButtonActionPerformed(evt);
            }
        });
        makeModelButton.setText("Add Make/Model");
        makeModelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makeModelButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Age");

        jLabel2.setText("Gender");

        jLabel3.setText("Car Type");

        QueryButton.setText("Query");
        QueryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QueryButtonActionPerformed(evt);
            }
        });
        jLabel4.setText("Car Price");

        jLabel5.setText("Avg. Yearly Maintenence Cost");

        jLabel6.setText("Car Color");

        jLabel7.setText("Number of Doors");

        jLabel8.setText("Number of Seats");

        jLabel9.setText("Size of Trunk");

        jLabel10.setText("Safety");
        
        jLabel11.setText("Satisfaction");
        
        jLabel12.setText("Make");
        
        jLabel13.setText("Model");

        

        trunkSize.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "small", "medium", "large"}));
        trunkSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trunkSizeActionPerformed(evt);
            }
        });

        safety.setModel(new javax.swing.DefaultComboBoxModel(new String[] {"low", "medium", "high"}));
        safety.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                safetyActionPerformed(evt);
            }
        });
        satisfaction.setModel(new javax.swing.DefaultComboBoxModel(new String[] {"low", "medium", "high", "veryhigh"}));
        satisfaction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                safetyActionPerformed(evt);
            }
        });

        gender.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "M", "F"}));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            ))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(maintenenceCost, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel10).addComponent(jLabel11))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel9))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(type, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel8))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(make, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel12))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(model, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel13))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(gender, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(age, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel7))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGap(52, 52, 52)
                                                .addComponent(jLabel6))))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(108, 108, 108)
                                .addComponent(QueryButton)
                                .addGap(18, 18, 18)
                                .addComponent(ClearButton)
                                .addGap(75, 75, 75)
                                .addComponent(SubmitButton)
                                .addComponent(makeModelButton)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(safety, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(satisfaction, 0, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(trunkSize, 0, 78, Short.MAX_VALUE)
                                    .addComponent(numSeats, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                                    .addComponent(numDoors, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                                    .addComponent(color, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(DisplayDataButton)))))
                .addContainerGap(83, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel6)
                    .addComponent(color, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(age, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)
                        .addComponent(numDoors, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel8)
                    .addComponent(type)
                    .addComponent(numSeats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createSequentialGroup()
                                        .addComponent(make, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel12))
                .addGroup(layout.createSequentialGroup()
                                        .addComponent(model, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel13))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9)
                        .addComponent(trunkSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(maintenenceCost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(safety, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(satisfaction, 0, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addComponent(jLabel11)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(QueryButton)
                    .addComponent(ClearButton)
                    .addComponent(SubmitButton)
                    .addComponent(DisplayDataButton)
                    .addComponent(makeModelButton))
                    
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //private void DBConnection()
    //{
        
	
       
    //}
    private void makeModelButtonActionPerformed(java.awt.event.ActionEvent evt){
                nestedType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "subCompact", "compact", "midSize", "fullSize" }));
                nestedType.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    typeActionPerformed(evt);
                }
        });
                nestedMake=new JTextField("Enter Make");
                nestedModel=new JTextField("Enter Model");
		makeModelWindow=new JFrame("Make and Model");
		javax.swing.JButton submitMakeModelButton = new JButton("Submit");
                javax.swing.JButton clearMakeModelButton = new JButton("Clear");
		makeModelWindow.setDefaultCloseOperation(javax.swing.JFrame.EXIT_ON_CLOSE);
		javax.swing.JLabel lab=new javax.swing.JLabel("MakeModel");
		lab.setPreferredSize(new Dimension(300, 100));
                
                
           
                makeModelWindow.getContentPane().add(submitMakeModelButton,BorderLayout.SOUTH);
                makeModelWindow.getContentPane().add(clearMakeModelButton,BorderLayout.NORTH);
                makeModelWindow.getContentPane().add(nestedModel,BorderLayout.CENTER);
                makeModelWindow.getContentPane().add(nestedMake,BorderLayout.WEST);
                makeModelWindow.getContentPane().add(nestedType,BorderLayout.EAST);
		makeModelWindow.pack();
		makeModelWindow.setVisible(true);
		submitMakeModelButton.addActionListener(new java.awt.event.ActionListener() {
                @Override
                public void actionPerformed(java.awt.event.ActionEvent evt)  {
                    try {
                        
                        SubmitMakeModelButtonActionPerformed(evt);
                    } catch (SQLException ex) {
                        Logger.getLogger(CarSelectionUIWDB.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                });
                
                clearMakeModelButton.addActionListener(new java.awt.event.ActionListener() {

                    @Override
                    public void actionPerformed(ActionEvent e)   {
                        try {
                            ClearMakeModelButtonActionPerformed(e); //To change body of generated methods, choose Tools | Templates.
                        } catch (SQLException ex) {
                            Logger.getLogger(CarSelectionUIWDB.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                });

	}
        private void SubmitMakeModelButtonActionPerformed(java.awt.event.ActionEvent e) throws SQLException{
            currentMake=nestedMake.getText();
            currentModel=nestedModel.getText();
            make.setText(currentMake);
            model.setText(currentModel);
            type.setSelectedItem(nestedType.getSelectedItem());
            

        }
        
        private void ClearMakeModelButtonActionPerformed(java.awt.event.ActionEvent e) throws SQLException{
            make.setText("");
            model.setText("");
            nestedMake.setText("");
            nestedModel.setText("");
            nestedType.setSelectedItem("subCompact");
        }
   
    private void SubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitButtonActionPerformed
        Statement stmt2=null;
        try{
	conn=DriverManager.getConnection(DB_URL,USER,PASS);
	System.out.println("Creating statement...");
	stmt = conn.createStatement();
        stmt2=conn.createStatement();
        }
        catch(SQLException s){
            Logger.getLogger(CarSelectionUIWDB.class.getName()).log(Level.SEVERE, null, s);
        }
		String st="INSERT INTO carTransact (gender, age, make, model, type, carprice, carmaintenenceCost,numdoors,numseats,safety,satisfaction)"
				  +"VALUES('"+gender.getSelectedItem()+"',"+ age.getText()+ ",'"
				  +make.getText()+"','"+ model.getText()+"','"+type.getSelectedItem()+"',"+ price.getText()+ 
				  ","+maintenenceCost.getText()+
				  ","+numDoors.getText()
				  +","+numSeats.getText()
				  +",'"+safety.getSelectedItem()+"','"+satisfaction.getSelectedItem()+"');";
                
        
        try {
            stmt.executeUpdate(st);
        } catch (SQLException ex) {
            Logger.getLogger(CarSelectionUIWDB.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
        
    }
    private void ClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearButtonActionPerformed
        gender.setSelectedItem("F");
        age.setText("");
        type.setSelectedItem("subCompact");
        make.setText("");
        model.setText("");
        price.setText("");
        maintenenceCost.setText("");
        color.setText("");
        numDoors.setText("");
        numSeats.setText("");
        trunkSize.setSelectedItem("medium");
        safety.setSelectedItem("medium");
        satisfaction.setSelectedItem("medium");// TODO add your handling code here:
        //String sql="DELETE FROM car";
        //try{
	//stmt.executeUpdate(sql);
        //}
        //catch(SQLException s){
            
        //}
    }//GEN-LAST:event_ClearButtonActionPerformed

    private void DisplayDataButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplayDataButtonActionPerformed
        try{
	conn=DriverManager.getConnection(DB_URL,USER,PASS);
	System.out.println("Creating statement...");
	stmt = conn.createStatement();
        }
        catch(SQLException s){
            
        }
        String sqlStatement="Select * from carTransact;";
        try {         
	ResultSet carInfo=stmt.executeQuery(sqlStatement);
        while (carInfo.next()){
                String usersGen=carInfo.getString("gender");
                int thisAge=carInfo.getInt("age");
                int thisPrice=carInfo.getInt("carprice");
                String thisMake=carInfo.getString("make");
                String thisModel=carInfo.getString("model");
                String thisType=carInfo.getString("type");
                int thisMainCost=carInfo.getInt("carmaintenenceCost");
                String thisColor=carInfo.getString("color");
                String tSize=carInfo.getString("trunkSize");
                int thisDoors=carInfo.getInt("numdoors");
                int thisSeats=carInfo.getInt("numseats");
                String thisSafety=carInfo.getString("safety");
                String thisSatisfaction=carInfo.getString("satisfaction");
                System.out.println("Gender: "+usersGen+"\n Age: "+thisAge+"\n Price: "+
                        +thisPrice+"\n Make:"+thisMake+"\n Model: "+thisModel+"\n Type: "+thisType+"\n Maintenence Cost: "+thisMainCost+"\n Color: "+thisColor+"\n Trunk Size: "+tSize+
                        "\n Number Of Doors: "+thisDoors+"\n Number of Seats: "+thisSeats+"\n Safety: "+thisSafety+"\n Satisfaction: "+thisSatisfaction);
        }
        //carInfo.close();
	}
        
        catch (SQLException ex) {
            Logger.getLogger(CarSelectionUIWDB.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        }
    private void QueryButtonActionPerformed(java.awt.event.ActionEvent evt){
        try {
            conn = DriverManager.getConnection(DB_URL,USER,PASS);
        } catch (SQLException ex) {
            Logger.getLogger(CarSelectionUIWDB.class.getName()).log(Level.SEVERE, null, ex);
        }
        Statement finder=null;
        try {
            finder = conn.createStatement();
   
        
	Scanner s=new Scanner(System.in);
	System.out.println("Enter Car Make");
	String carMake=s.next();
	String sql="Select count(make) FROM carTransact WHERE make ='"+carMake+"';";
	String satLow="SELECT count(make) FROM carTransact where (satisfaction ='low' AND make='"+carMake+"');";
	String satMed="SELECT count(make) FROM carTransact where (satisfaction ='medium'AND make='"+carMake+"');";
	String satHigh="SELECT count(make) FROM carTransact where (satisfaction ='high'AND make='"+carMake+"');";
	String satVeryHigh="SELECT count(make) FROM carTransact where (satisfaction ='very high' AND make='"+carMake+"');";
	ResultSet rs1;
        
            rs1 = finder.executeQuery(sql);
        while(rs1.next()){
		System.out.println("Number of "+carMake+": "+rs1.getInt("count(make)"));
	}
	ResultSet rs2;
         
            rs2 = finder.executeQuery(satLow);
        while(rs2.next()){
		System.out.println("Number of users with low satisfaction of "+carMake+": "+ rs2.getInt("count(make)"));
	}
	ResultSet rs3;
        
            rs3 = finder.executeQuery(satMed);
        while(rs3.next()){
		System.out.println("Number of users with medium satisfaction of "+carMake+": "+rs3.getInt("count(make)"));
        }
	ResultSet rs4;
        
            rs4 = finder.executeQuery(satHigh);
        while(rs4.next()){
		System.out.println("Number of users with high satisfaction of "+carMake+": "+rs4.getInt("count(make)"));
	}
	ResultSet rs5;
        
            rs5 = finder.executeQuery(satVeryHigh);
        while(rs5.next()){
		System.out.println("Number of users with very high satisfaction of "+carMake+": "+rs5.getInt("count(make)"));
	}
        
       
        
        
	
	
	
	
	
        }
        catch (SQLException e){
        
            Logger.getLogger(CarSelectionUIWDB.class.getName()).log(Level.SEVERE, null, e);    
        }
    }
    private void formMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_formMouseEntered

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_formMouseClicked

    private void typeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeActionPerformed
        
    }//GEN-LAST:event_typeActionPerformed

    private void trunkSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trunkSizeActionPerformed

    }//GEN-LAST:event_trunkSizeActionPerformed

    private void safetyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_safetyActionPerformed

        
    }//GEN-LAST:event_safetyActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
//        System.out.println(System.getProperty("java.home"));
        Connection conn=null;
        Statement stmt=null;
         try{             
            Class.forName(JDBC_DRIVER);
        }
        catch(ClassNotFoundException c){
            System.out.println("Class not found");
        }
	System.out.println("Connecting to database");
        try {
            conn=DriverManager.getConnection("jdbc:mysql://localhost:3306/", "root", "pass");
        } catch (SQLException ex) {
            Logger.getLogger(CarSelectionUIWDB.class.getName()).log(Level.SEVERE, null, ex);
        }
        
	System.out.println("Creating statement...");
        try {
            stmt = conn.createStatement();
        } catch (SQLException ex) {
            System.out.println("SQL exception");
            
            Logger.getLogger(CarSelectionUIWDB.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            stmt.executeUpdate("CREATE DATABASE IF NOT EXISTS patrick_f ");
        } catch (SQLException ex) {
            Logger.getLogger(CarSelectionUIWDB.class.getName()).log(Level.SEVERE, null, ex);
        }

//	makeSql="CREATE TABLE IF NOT EXISTS make("+
//        "make VARCHAR(20) NOT NULL,"+
//	"model VARCHAR(20) NOT NULL,"+
//        "type VARCHAR(20) NOT NULL,"+
//        "FOREIGN KEY(make, model) references CarTransact(make,model)"+
//	")";
			
	String sql;
        String deletedb="DROP DATABASE IF EXISTS patrick_fleet;";
        String createdb="CREATE DATABASE patrick_fleet;";
	String db ="USE patrick_fleet;";
        String deleteSql="DROP TABLE IF EXISTS carTransact";
        sql="CREATE TABLE IF NOT EXISTS carTransact("+
		"gender varchar(1) DEFAULT 'M' NOT NULL CHECK (gender=\'M\' OR gender=\'F\'),"+
               "age int CHECK (age>=18 AND age<=99),"+      
		"make  VARCHAR(20) DEFAULT '' NOT NULL,"+
		"model VARCHAR(20) DEFAULT '' NOT NULL,"+
                "type VARCHAR (20) DEFAULT '' NOT NULL,"+
		"carprice  int DEFAULT 0 NOT NULL CHECK (carprice>=0),"+
		"carmaintenencecost int DEFAULT 0 CHECK (carmaintenencecost>=0),"+
		"color VARCHAR(20) DEFAULT 'red' NOT NULL,"+
		"numdoors int DEFAULT 0 NOT NULL CHECK (numdoors>0),"+
		"numseats int DEFAULT 0 NOT NULL CHECK (numseats>0),"+
		"trunksize VARCHAR(6) DEFAULT 'medium' NOT NULL CHECK (trunksize=\"low\" OR trunksize=\"medium\" OR trunksize=\"high\"),"+
		"safety VARCHAR(10) DEFAULT '' NOT NULL CHECK (safety=\"low\" OR safety=\"medium\" OR safety=\"high\"),"+
		"satisfaction VARCHAR(10) DEFAULT '' NOT NULL CHECK (satisfaction=\"low\" OR satisfaction=\"medium\" OR satisfaction=\"high\" OR satisfaction = \"veryhigh\"),"+
		"PRIMARY KEY (make, model, type)"+
		")";
        try {
            stmt.execute(deletedb);
            stmt.execute(createdb);
            stmt.execute(db);
            stmt.execute(deleteSql);
            stmt.executeUpdate(sql);
            //stmt.executeUpdate(makeSql);
        } catch (SQLException ex) {
            Logger.getLogger(CarSelectionUIWDB.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {

            UIManager.put("nimbusBase", new Color(100, 200, 200));//blue
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("nimbusBase".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CarSelectionUIWDB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CarSelectionUIWDB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CarSelectionUIWDB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CarSelectionUIWDB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CarSelectionUIWDB().setVisible(true);
            }
        });
    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ClearButton;
    private javax.swing.JButton DisplayDataButton;
    private javax.swing.JButton SubmitButton;
    private JButton QueryButton;
    private JButton makeModelButton;
    private javax.swing.JTextField age;
    private javax.swing.JTextField color;
    private javax.swing.JComboBox gender;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private JLabel jLabel11;
    private JLabel jLabel12;
    private JLabel jLabel13;
    private javax.swing.JTextField maintenenceCost;
    private javax.swing.JTextField numDoors;
    private javax.swing.JTextField numSeats;
    private javax.swing.JTextField price;
    private JTextField nestedMake;
    private JTextField nestedModel;
    private javax.swing.JComboBox safety;
    private javax.swing.JComboBox trunkSize;
    private javax.swing.JComboBox type;
    private JTextField make;
    private JTextField model;
    private JComboBox satisfaction;
    private JComboBox nestedType;
    private String currentMake="";
    private String currentModel="";
    private String currentType="";
    
    // End of variables declaration//GEN-END:variables
    
}
